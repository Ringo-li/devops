---
- name: copy docker.repo
  copy:
    src: docker.repo
    dest: /etc/yum.repos.d/

- name: This command will reset yum cache.
  shell:
    cmd: yum clean all && yum makecache

- name: ensure a list of packages installed
  yum:
    name: "{{ packages }}"
    disablerepo: "ftp"

- name: "Create /etc/docker if it does not exist"
  file:
    path: /etc/docker/
    state: directory
    mode: '0755'

- name: copy daemon.json
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json

- name: enable and start docker
  systemd:
    name: docker
    state: started
    enabled: yes

- name: download docker images 
  get_url:
    url: "ftp://ftp/pub/docker-images/dnsmasq.tar"
    dest: "{{ images_path }}"
    force: yes

- name: upload docker images 
  shell:
    cmd: "docker load < {{ images_path }}/dnsmasq.tar"

- name: Create config directory 
  file:
    path: "{{ images_path }}/config"
    state: directory
    mode: '0755'

- name: copy dns config files
  template:
    src: "{{ item }}"
    dest: "{{ images_path }}/config/{{ item }}"
  loop: "{{ dns_configs }}"

- name: run dns container 
  shell:
    cmd: "docker run -d -p 53:53/tcp -p 53:53/udp --restart=always --cap-add=NET_ADMIN --name dns-server andyshinn/dnsmasq"

- name: update dns container config
  shell:
    cmd: "docker cp {{ images_path }}/config/{{ item }} dns-server:/etc/"
  loop: "{{ dns_configs }}"

- name: restart dns container 
  shell:
    cmd: "docker restart dns-server"

- name: download docker-compose  
  get_url:
    url: "ftp://ftp/pub/harbor/docker-compose-Linux-x86_64"
    dest: "/usr/local/bin/docker-compose"
    mode: '0755'
    force: yes

- name: Unarchive harbor that needs to be downloaded 
  unarchive:
    src: "ftp://ftp/pub/harbor/harbor-offline-installer-v2.2.2.tgz"
    dest: /root
    remote_src: yes

- name: copy harbor.yml
  template:
    src: "harbor.yml"
    dest: "/root/harbor/harbor.yml"

- name: install  harbor
  shell:
    cmd: "bash /root/harbor/install.sh"







