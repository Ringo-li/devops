---
- name: Create a directory if it does not exist
  file:
    path: "{{ oracle_path }}"
    state: directory
    mode: '0755'
    
- name: download db_install.tar.gz
  get_url:
    url: "ftp://ftp/pub/packages/oracle-11g-r2-11.2.0.4/db_install.tar.gz"
    dest: "{{ oracle_path }}"
    force: yes

- name: Unarchive a file that is already on the remote machine
  unarchive:
    src: "{{ oracle_path }}/db_install.tar.gz"
    dest: "{{ oracle_path }}"
    remote_src: yes

- name: download p13390677_112040_Linux-x86-64_1of7.zip
  get_url:
    url: "ftp://ftp/pub/packages/oracle-11g-r2-11.2.0.4/p13390677_112040_Linux-x86-64_1of7.zip"
    dest: "{{ oracle_path }}/db_install"
    force: yes

- name: download p13390677_112040_Linux-x86-64_2of7.zip
  get_url:
    url: "ftp://ftp/pub/packages/oracle-11g-r2-11.2.0.4/p13390677_112040_Linux-x86-64_2of7.zip"
    dest: "{{ oracle_path }}/db_install"
    force: yes

- name: copy oracle-env.conf
  template:
    src: oracle-env.conf
    dest: "{{ oracle_path }}/db_install/oracle-env.conf"
    
- name: init oracle
  shell: 
    cmd: /bin/bash {{ oracle_path }}/db_install/oracle-script.sh install
    chdir: "{{ oracle_path }}/db_install/"

- name: install oracle by oracle user
  shell: 
    cmd: su - oracle  -c "{{ oracle_path }}/db_install/database/runInstaller -silent -responseFile  {{ oracle_path }}/db_install/database/response/db_install.rsp -ignorePrereq"


- name: check oracle install status
  shell: 
    cmd: cat {{ oracle_path }}/oracle11g/oraInventory/logs/installActions*.log | grep "Exit Status"
  register: result
  until: result.rc == 0
  retries: 30
  delay: 10


# - name: Show stdout from the previous task.
#   debug:
#     var: result

- name: execute netca.rsp by oracle user to finish Oracle Net Service config
  shell: 
    cmd: su - oracle  -c "netca /silent /responseFile {{ oracle_path }}/db_install/database/response/netca.rsp"
  # when: result.rc == 0

- name: execute orainstRoot.sh to change  authority
  shell: 
    cmd: "{{ oracle_path }}/oracle11g/oraInventory/orainstRoot.sh"

- name: execute db_1/root.sh change  authority
  shell: 
    cmd: "{{ oracle_path }}/oracle11g/oracle/product/11.2.0/db_1/root.sh"

- name: create instance
  shell: 
    cmd: ./oracle-script.sh create instance
    chdir: "{{ oracle_path }}/db_install/"

- name: execute dbca.rsp by oracle user to create database
  shell: 
    cmd: su - oracle  -c "dbca -silent -responseFile {{ oracle_path }}/db_install/database/response/dbca.rsp"

- name: cp oracle.service 
  shell: 
    cmd: cp oracle.service  /usr/lib/systemd/system
    chdir: "{{ oracle_path }}/db_install/"

- name: enable and start oracle
  systemd:
    name: oracle
    state: restarted
    enabled: yes

- name: Create oradata/test if it does not exist
  file:
    path: "{{ oracle_path }}/oracle11g/oracle/oradata/test"
    state: directory
    mode: '0755'
    owner: oracle
    group: oinstall

- name: Create oracle/dmp if it does not exist
  file:
    path: "{{ oracle_path }}/oracle11g/oracle/dmp"
    state: directory
    mode: '0755'
    owner: oracle
    group: oinstall

- name: copy oratab
  template:
    src: oratab
    dest: /etc/oratab